name: Build and Deploy
on:
  schedule:
    - cron:  '30 1 * * *'  
  push:
jobs:

  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@master
      - name: Generate build number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}        
      - name: Print new build number
        run: echo "Build number is $GITHUB_RUN_NUMBER"
      - name: 'Docker Registry Login' 
        uses: azure/docker-login@v1
        with:
          login-server: hub.docker.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: 'Pull Docker Image'    
        shell: bash
        run: |
            docker pull icnteam/android-build:hicn
      - name: 'Build apks and publish'
        env:
          PLAYSTORE_KEY: "${{ secrets.PLAYSTORE_KEY }}"
          PLAYSTORE_PRIVATE_KEY: "${{secrets.PLAYSTORE_PRIVATE_KEY}}"
        if: github.ref == 'refs/heads/master'
        shell: bash
        run: |
          echo -e '${{ secrets.PLAYSTORE_KEY }}' > playstore_key.json
          docker run -v $PWD:/hicn icnteam/android-build:hicn bash -c "echo 'run number: ${{ github.run_number }}'; bash /hicn/ci/build_apk.sh 1 $GITHUB_RUN_NUMBER"; mkdir -p apks; cp *.apk apks/
      - name: 'Build apks without publishing'
        if: github.ref != 'refs/heads/master'
        shell: bash
        run: |
          docker run -v $PWD:/hicn icnteam/android-build:hicn bash -c "bash /hicn/ci/build_apk.sh 0 $GITHUB_RUN_NUMBER"; mkdir -p apks; cp *.apk apks/
      - name: 'Push Apks artifacts'
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@v1
        with:
          name: apks
          path: apks
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false
      - name: Upload Release Asset (hICN_Tools)
        if: github.ref == 'refs/heads/master'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apks/hICN_Tools.apk
          asset_name: hICN_Tools.apk
          asset_content_type: application/zip
      - name: Upload Release Asset (Viper arm64)
        if: github.ref == 'refs/heads/master'
        id: upload-release-asset-viper-arm64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apks/viper-arm64.apk
          asset_name: viper-arm64.apk
          asset_content_type: application/zip
      - name: Upload Release Asset (Viper x86_64)
        if: github.ref == 'refs/heads/master'
        id: upload-release-asset-viper-x86_64
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apks/viper-x86_64.apk
          asset_name: viper-x86_64.apk
          asset_content_type: application/zip
      - name: Upload Release Asset (HicnForwarderAndroid)
        if: github.ref == 'refs/heads/master'
        id: upload-release-asset-hicnforwarder 
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./apks/HicnForwarderAndroid.apk
          asset_name: HicnForwarder.apk
          asset_content_type: application/zip
